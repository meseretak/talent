paths:
  # Chat Room Management
  /chat/rooms:
    post:
      summary: Create a new chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatRoomRequest'
      responses:
        '201':
          description: Chat room created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      summary: Get user chat rooms
      description: Get all chat rooms the authenticated user is part of
      tags:
        - Chat
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Chat rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /chat/rooms/search:
    get:
      summary: Search chat rooms
      description: Search for chat rooms based on query and filters
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search query
        - in: query
          name: type
          schema:
            type: string
            enum: [direct, group]
          description: Filter by room type
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Maximum number of results
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of results to skip
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /chat/rooms/{id}:
    get:
      summary: Get a specific chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Chat room retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Update a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChatRoomRequest'
      responses:
        '200':
          description: Chat room updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Chat room deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Chat room deleted successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{id}/leave:
    post:
      summary: Leave a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Successfully left the chat room
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully left the chat room'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{id}/archive:
    post:
      summary: Archive a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Chat room archived successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Chat room archived successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{id}/unarchive:
    post:
      summary: Unarchive a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Chat room unarchived successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Chat room unarchived successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/archived:
    get:
      summary: Get archived chat rooms
      description: Get all archived chat rooms for the authenticated user
      tags:
        - Chat
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Archived chat rooms retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Room Participants Management
  /chat/rooms/{roomId}/participants:
    post:
      summary: Add participants to a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParticipantsRequest'
      responses:
        '200':
          description: Participants added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{roomId}/participants/{participantId}:
    delete:
      summary: Remove a participant from a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
        - in: path
          name: participantId
          required: true
          schema:
            type: string
          description: Participant ID to remove
      responses:
        '200':
          description: Participant removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  # Room Moderators Management
  /chat/rooms/{id}/moderators:
    post:
      summary: Add a moderator to a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddModeratorRequest'
      responses:
        '200':
          description: Moderator added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{id}/moderators/{userId}:
    delete:
      summary: Remove a moderator from a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID to remove as moderator
      responses:
        '200':
          description: Moderator removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  # Room Settings & Muting
  /chat/rooms/{id}/settings:
    put:
      summary: Update room settings
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoomSettingsRequest'
      responses:
        '200':
          description: Room settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{id}/mute:
    post:
      summary: Mute a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Chat room muted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Chat room muted successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{id}/unmute:
    delete:
      summary: Unmute a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Chat room unmuted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Chat room unmuted successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # Message Management
  /chat/rooms/{roomId}/messages:
    post:
      summary: Send a message to a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      summary: Get messages from a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 50
          description: Maximum number of messages to return
        - in: query
          name: before
          schema:
            type: string
          description: Get messages before this timestamp
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/messages/search:
    get:
      summary: Search messages
      description: Search for messages across all chat rooms
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Search query
        - in: query
          name: roomId
          schema:
            type: string
          description: Filter by room ID
        - in: query
          name: senderId
          schema:
            type: string
          description: Filter by sender ID
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date-time
          description: Filter messages from this date
        - in: query
          name: dateTo
          schema:
            type: string
            format: date-time
          description: Filter messages to this date
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Maximum number of results
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of results to skip
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /chat/messages/{messageId}:
    put:
      summary: Edit a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMessageRequest'
      responses:
        '200':
          description: Message edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      responses:
        '200':
          description: Message deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Message deleted successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  # Message Reactions
  /chat/messages/{messageId}/reactions:
    post:
      summary: Add a reaction to a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMessageReactionRequest'
      responses:
        '200':
          description: Reaction added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageReaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Remove a reaction from a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      responses:
        '200':
          description: Reaction removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Reaction removed successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # Message Replies & Forwarding
  /chat/messages/{messageId}/reply:
    post:
      summary: Reply to a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID to reply to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyToMessageRequest'
      responses:
        '201':
          description: Reply sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/messages/{messageId}/forward:
    post:
      summary: Forward a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID to forward
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardMessageRequest'
      responses:
        '200':
          description: Message forwarded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Message forwarded successfully'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/messages/{messageId}/replies:
    get:
      summary: Get replies to a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      responses:
        '200':
          description: Replies retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # Message Status
  /chat/messages/{messageId}/status:
    put:
      summary: Update message status
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageStatusRequest'
      responses:
        '200':
          description: Message status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      summary: Get message status
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      responses:
        '200':
          description: Message status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [sent, delivered, read]
                  messageId:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # File Attachments
  /chat/rooms/{roomId}/attachments:
    post:
      summary: Upload an attachment to a chat room
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload
      responses:
        '201':
          description: Attachment uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageAttachment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      summary: Get room attachments
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
      responses:
        '200':
          description: Attachments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageAttachment'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/rooms/{roomId}/attachments/{messageId}:
    delete:
      summary: Delete a specific attachment
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      responses:
        '200':
          description: Attachment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Attachment deleted successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  # Message Reporting
  /chat/messages/{messageId}/report:
    post:
      summary: Report a message
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: Message ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportMessageRequest'
      responses:
        '200':
          description: Message reported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Message reported successfully'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  # Analytics
  /chat/analytics:
    get:
      summary: Get chat analytics
      description: Get analytics data for chat usage
      tags:
        - Chat
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatAnalytics'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Message Read Status
  /chat/rooms/{roomId}/messages/read:
    post:
      summary: Mark messages as read
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
          description: Chat room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkMessagesAsReadRequest'
      responses:
        '200':
          description: Messages marked as read successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Messages marked as read successfully'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/messages/unread:
    get:
      summary: Get unread message count
      tags:
        - Chat
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Unread message count retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  unreadCount:
                    type: integer
                    description: Number of unread messages
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Notifications
  /chat/notifications:
    get:
      summary: Get chat notifications
      tags:
        - Chat
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /chat/notifications/{id}/read:
    put:
      summary: Mark notification as read
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Notification ID
      responses:
        '200':
          description: Notification marked as read successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Notification marked as read successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /chat/notifications/{id}:
    delete:
      summary: Delete a notification
      tags:
        - Chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Notification ID
      responses:
        '200':
          description: Notification deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Notification deleted successfully'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
