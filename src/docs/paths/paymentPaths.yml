paths:
  /payments:
    post:
      summary: Create a new payment
      tags:
        - Payments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - currency
                - description
              properties:
                amount:
                  type: number
                  description: Payment amount
                currency:
                  type: string
                  description: Currency code (e.g., USD)
                description:
                  type: string
                  description: Payment description
                freelancerId:
                  type: string
                  description: ID of the freelancer receiving payment
                projectId:
                  type: string
                  description: Associated project ID
                invoiceId:
                  type: string
                  description: Associated invoice ID
                paymentMethodId:
                  type: string
                  description: ID of the payment method to use
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    get:
      summary: Get all payments
      description: Get payments with optional filtering
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [pending, completed, failed, refunded]
          description: Filter by payment status
        - in: query
          name: freelancerId
          schema:
            type: string
          description: Filter by freelancer ID
        - in: query
          name: projectId
          schema:
            type: string
          description: Filter by project ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Filter by start date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: Filter by end date
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 20
          description: Maximum number of results
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Payment'
                  page:
                    type: integer
                  limit:
                    type: integer
                  totalPages:
                    type: integer
                  totalResults:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'

  /payments/{paymentId}:
    get:
      summary: Get payment by ID
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: paymentId
          required: true
          schema:
            type: string
          description: Payment ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /payments/{paymentId}/status:
    patch:
      summary: Update payment status
      description: Update the status of a payment (admin only)
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: paymentId
          required: true
          schema:
            type: string
          description: Payment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [pending, completed, failed, refunded]
                  description: New payment status
                notes:
                  type: string
                  description: Optional notes about the status change
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /payments/methods:
    post:
      summary: Add a payment method
      tags:
        - Payments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
              properties:
                type:
                  type: string
                  enum: [credit_card, bank_account, paypal]
                  description: Payment method type
                token:
                  type: string
                  description: Payment processor token
                isDefault:
                  type: boolean
                  description: Set as default payment method
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      summary: Get user payment methods
      tags:
        - Payments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /payments/methods/{methodId}:
    delete:
      summary: Remove a payment method
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: methodId
          required: true
          schema:
            type: string
          description: Payment method ID
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /payments/methods/{methodId}/default:
    patch:
      summary: Set payment method as default
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: methodId
          required: true
          schema:
            type: string
          description: Payment method ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /payments/invoices:
    post:
      summary: Create an invoice
      tags:
        - Payments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - items
                - clientId
              properties:
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - description
                      - amount
                    properties:
                      description:
                        type: string
                      amount:
                        type: number
                      quantity:
                        type: number
                        default: 1
                clientId:
                  type: string
                projectId:
                  type: string
                dueDate:
                  type: string
                  format: date
                notes:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      summary: Get all invoices
      description: Get invoices with optional filtering
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [draft, sent, paid, overdue, cancelled]
          description: Filter by invoice status
        - in: query
          name: clientId
          schema:
            type: string
          description: Filter by client ID
        - in: query
          name: projectId
          schema:
            type: string
          description: Filter by project ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Filter by start date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: Filter by end date
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 20
          description: Maximum number of results
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invoice'
                  page:
                    type: integer
                  limit:
                    type: integer
                  totalPages:
                    type: integer
                  totalResults:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'

  /payments/invoices/{invoiceId}:
    get:
      summary: Get invoice by ID
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
          description: Invoice ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      summary: Update invoice
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
          description: Invoice ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                      amount:
                        type: number
                      quantity:
                        type: number
                dueDate:
                  type: string
                  format: date
                notes:
                  type: string
                status:
                  type: string
                  enum: [draft, sent, paid, overdue, cancelled]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /payments/invoices/{invoiceId}/send:
    post:
      summary: Send invoice to client
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
          description: Invoice ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
